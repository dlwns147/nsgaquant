import numpy as np

def get_median_absolute_deviation(data):
    return np.median(np.absolute(data - np.median(data, axis=0)), axis=0)

n_block = 32
n_layer = 7

ppl_w_outlier = [5.739490032196045,5.741342067718506,5.737436771392822,5.745964527130127,5.739047050476074,5.744318008422852,5.74847412109375,5.74544620513916,5.741732120513916,5.739531993865967,5.743449687957764,5.754317283630371,5.7447052001953125,5.7493157386779785,5.741204261779785,5.743091106414795,5.742424964904785,5.736335754394531,5.742964267730713,5.7408576011657715,5.741703987121582,5.7371506690979,5.739017009735107,5.741073131561279,5.7441020011901855,5.738273620605469,5.733338832855225,5.743645668029785,5.739065647125244,5.740608215332031,5.739027976989746,5.738856792449951,5.739590167999268,5.738084316253662,5.73569917678833,5.737776756286621,5.740390300750732,5.739713191986084,5.7443528175354,5.742922306060791,5.743870258331299,5.743217945098877,5.746728420257568,5.751252174377441,5.743274688720703,5.739964485168457,5.746780872344971,5.741499423980713,5.738726615905762,5.745515823364258,5.739497661590576,5.739187717437744,5.739660739898682,5.739394664764404,5.739870548248291,5.739924907684326,5.741352558135986,5.7371697425842285,5.7400312423706055,5.739437103271484,5.7401628494262695,5.744325637817383,5.739901542663574,5.736730575561523,5.863280296325684,8.169598579406738,5.771939277648926,5.75439453125,5.778501510620117,5.773108959197998,5.779584884643555,5.770644187927246,5.7681660652160645,5.766526222229004,5.78736686706543,5.790252208709717,5.78432559967041,5.777474880218506,5.773869514465332,5.773655891418457,5.777885913848877,5.760875225067139,5.760809898376465,5.753957748413086,5.751985549926758,5.751660346984863,5.76085090637207,5.745296478271484,5.759589195251465,5.738403797149658,5.74955940246582,5.748639106750488,5.736652374267578,5.73802375793457,5.742578506469727,5.737201690673828,5.745328903198242,5.750185966491699,5.756925582885742,5.7497429847717285,5.745481014251709,5.743612766265869,5.741199970245361,5.748509407043457,5.748856544494629,5.750778675079346,5.754734039306641,5.749044895172119,5.7491350173950195,5.753447532653809,5.753077507019043,5.752188205718994,5.753663539886475,5.7452569007873535,5.741656303405762,5.747964859008789,5.742757797241211,5.742154121398926,5.742193698883057,5.742175102233887,5.744681358337402,5.747000694274902,5.741759777069092,5.740318775177002,5.741778373718262,5.7418646812438965,5.739774703979492,5.742696285247803,5.7364044189453125,5.738107681274414,5.740522384643555,5.741369724273682,5.7504401206970215,5.748795509338379,5.75241756439209,5.749142646789551,5.75579833984375,5.74998664855957,5.752305030822754,5.751026630401611,5.750291347503662,5.751893997192383,5.748589515686035,5.752740859985352,5.754076957702637,5.750622749328613,5.752717971801758,5.753002166748047,5.751943588256836,5.755321979522705,5.755220413208008,5.75532341003418,5.757801532745361,5.755760192871094,5.757411003112793,5.75886344909668,5.763373374938965,5.759902477264404,5.762883186340332,5.773791313171387,5.739249229431152,5.745457172393799,5.748173236846924,5.752470016479492,5.749729156494141,5.754047870635986,5.762938499450684,5.759477615356445,5.761765956878662,5.752052307128906,5.757857799530029,5.755034923553467,5.7495927810668945,5.7546586990356445,5.754094123840332,5.753723621368408,5.753872394561768,5.7558746337890625,5.755688667297363,5.756818771362305,5.7579803466796875,5.755760192871094,5.758552074432373,5.753943920135498,5.756965637207031,5.756469249725342,5.758128643035889,5.760610580444336,5.753701686859131,5.753671646118164,5.757318019866943,5.790205001831055,5.739466667175293,88.9616928100586,5.757338047027588,5.750985622406006,5.773502826690674,5.748758792877197,5.758708953857422,5.75943660736084,5.762325763702393,5.752793788909912,5.758271217346191,5.749021530151367,5.759790897369385,5.76054048538208,5.75750732421875,5.765753269195557,5.765658378601074,5.762870788574219,5.764561176300049,5.76682186126709,5.771150588989258,5.76666784286499,5.763769626617432,5.763241767883301,5.759859085083008,5.759862899780273,5.755925178527832,5.758757591247559,5.75498628616333,5.755739212036133,5.765250205993652,6.285498142242432]
ppl = [5.739490032196045,5.741342067718506,5.737436771392822,5.745964527130127,5.739047050476074,5.744318008422852,5.74847412109375,5.74544620513916,5.741732120513916,5.739531993865967,5.743449687957764,5.754317283630371,5.7447052001953125,5.7493157386779785,5.741204261779785,5.743091106414795,5.742424964904785,5.736335754394531,5.742964267730713,5.7408576011657715,5.741703987121582,5.7371506690979,5.739017009735107,5.741073131561279,5.7441020011901855,5.738273620605469,5.733338832855225,5.743645668029785,5.739065647125244,5.740608215332031,5.739027976989746,5.738856792449951,5.739590167999268,5.738084316253662,5.73569917678833,5.737776756286621,5.740390300750732,5.739713191986084,5.7443528175354,5.742922306060791,5.743870258331299,5.743217945098877,5.746728420257568,5.751252174377441,5.743274688720703,5.739964485168457,5.746780872344971,5.741499423980713,5.738726615905762,5.745515823364258,5.739497661590576,5.739187717437744,5.739660739898682,5.739394664764404,5.739870548248291,5.739924907684326,5.741352558135986,5.7371697425842285,5.7400312423706055,5.739437103271484,5.7401628494262695,5.744325637817383,5.739901542663574,5.736730575561523,5.863280296325684,8.169598579406738,5.771939277648926,5.75439453125,5.778501510620117,5.773108959197998,5.779584884643555,5.770644187927246,5.7681660652160645,5.766526222229004,5.78736686706543,5.790252208709717,5.78432559967041,5.777474880218506,5.773869514465332,5.773655891418457,5.777885913848877,5.760875225067139,5.760809898376465,5.753957748413086,5.751985549926758,5.751660346984863,5.76085090637207,5.745296478271484,5.759589195251465,5.738403797149658,5.74955940246582,5.748639106750488,5.736652374267578,5.73802375793457,5.742578506469727,5.737201690673828,5.745328903198242,5.750185966491699,5.756925582885742,5.7497429847717285,5.745481014251709,5.743612766265869,5.741199970245361,5.748509407043457,5.748856544494629,5.750778675079346,5.754734039306641,5.749044895172119,5.7491350173950195,5.753447532653809,5.753077507019043,5.752188205718994,5.753663539886475,5.7452569007873535,5.741656303405762,5.747964859008789,5.742757797241211,5.742154121398926,5.742193698883057,5.742175102233887,5.744681358337402,5.747000694274902,5.741759777069092,5.740318775177002,5.741778373718262,5.7418646812438965,5.739774703979492,5.742696285247803,5.7364044189453125,5.738107681274414,5.740522384643555,5.741369724273682,5.7504401206970215,5.748795509338379,5.75241756439209,5.749142646789551,5.75579833984375,5.74998664855957,5.752305030822754,5.751026630401611,5.750291347503662,5.751893997192383,5.748589515686035,5.752740859985352,5.754076957702637,5.750622749328613,5.752717971801758,5.753002166748047,5.751943588256836,5.755321979522705,5.755220413208008,5.75532341003418,5.757801532745361,5.755760192871094,5.757411003112793,5.75886344909668,5.763373374938965,5.759902477264404,5.762883186340332,5.773791313171387,5.739249229431152,5.745457172393799,5.748173236846924,5.752470016479492,5.749729156494141,5.754047870635986,5.762938499450684,5.759477615356445,5.761765956878662,5.752052307128906,5.757857799530029,5.755034923553467,5.7495927810668945,5.7546586990356445,5.754094123840332,5.753723621368408,5.753872394561768,5.7558746337890625,5.755688667297363,5.756818771362305,5.7579803466796875,5.755760192871094,5.758552074432373,5.753943920135498,5.756965637207031,5.756469249725342,5.758128643035889,5.760610580444336,5.753701686859131,5.753671646118164,5.757318019866943,5.790205001831055,5.739466667175293, 5.757338047027588,5.750985622406006,5.773502826690674,5.748758792877197,5.758708953857422,5.75943660736084,5.762325763702393,5.752793788909912,5.758271217346191,5.749021530151367,5.759790897369385,5.76054048538208,5.75750732421875,5.765753269195557,5.765658378601074,5.762870788574219,5.764561176300049,5.76682186126709,5.771150588989258,5.76666784286499,5.763769626617432,5.763241767883301,5.759859085083008,5.759862899780273,5.755925178527832,5.758757591247559,5.75498628616333,5.755739212036133,5.765250205993652,6.285498142242432]
sensitivity_13b =  [0.015245438 ,0.015323639 ,0.090057373 ,0.015979767 ,0.015117645 ,0.015068054 ,0.179260254 ,0.015329361 ,0.015319824 ,0.033084869 ,0.015951157 ,0.015247345 ,0.015367508 ,0.02431488 ,0.01515007 ,0.015094757 ,0.028030396 ,0.016345978 ,0.015874863 ,0.016031265 ,0.017011642 ,0.015281677 ,0.015035629 ,0.021980286 ,0.016498566 ,0.016149521 ,0.016893387 ,0.963012695 ,0.016353607 ,0.015489578 ,0.01738739 ,0.016412735 ,0.016113281 ,0.016727448 ,0.01707077 ,0.016330719 ,0.015377045 ,0.016796112 ,0.015640259 ,0.016582489 ,0.016141891 ,0.016864777 ,0.01581955 ,0.015348434 ,0.01770401 ,0.015781403 ,0.016283035 ,0.016937256 ,0.017124176 ,0.016300201 ,0.0154953 ,0.017959595 ,0.016218185 ,0.016361237 ,0.017126083 ,0.017173767 ,0.015897751 ,0.015232086 ,0.017280579 ,0.015771866 ,0.016242981 ,0.017021179 ,0.016904831 ,0.016138077 ,0.015609741 ,0.017307281 ,0.016084671 ,0.016107559 ,0.01720047 ,0.016933441 ,0.015552521 ,0.015625 ,0.017375946 ,0.016136169 ,0.016040802 ,0.016368866 ,0.016387939 ,0.01543808 ,0.015542984 ,0.018249512 ,0.016220093 ,0.016002655 ,0.016149521 ,0.016542435 ,0.015781403 ,0.01558876 ,0.017923355 ,0.01594162 ,0.015769958 ,0.016418457 ,0.016305923 ,0.015796661 ,0.015594482 ,0.017595291 ,0.015882492 ,0.015853882 ,0.016420364 ,0.016521454 ,0.01581955 ,0.015922546 ,0.018310547 ,0.016300201 ,0.016046524 ,0.016468048 ,0.016750336 ,0.015609741 ,0.015666962 ,0.018146515 ,0.016044617 ,0.016025543 ,0.016597748 ,0.01688385 ,0.015544891 ,0.015491486 ,0.017133713 ,0.015953064 ,0.016101837 ,0.016304016 ,0.017230988 ,0.015499115 ,0.01540184 ,0.016738892 ,0.015964508 ,0.016189575 ,0.016616821 ,0.016960144 ,0.015518188 ,0.015350342 ,0.016136169 ,0.015916824 ,0.015962601 ,0.016468048 ,0.01700592 ,0.015457153 ,0.01530838 ,0.016132355 ,0.015604019 ,0.016113281 ,0.016582489 ,0.017124176 ,0.015455246 ,0.015331268 ,0.016052246 ,0.015716553 ,0.016304016 ,0.016748428 ,0.017061234 ,0.015428543 ,0.015327454 ,0.016174316 ,0.015821457 ,0.016372681 ,0.016305923 ,0.017694473 ,0.015323639 ,0.015266418 ,0.0157547 ,0.015550613 ,0.016363144 ,0.016605377 ,0.017335892 ,0.015205383 ,0.015151978 ,0.015645981 ,0.015478134 ,0.01631546 ,0.016607285 ,0.017318726 ,0.015392303 ,0.015424728 ,0.015413284 ,0.015565872 ,0.016643524 ,0.016565323 ,0.017127991 ,0.015302658 ,0.015266418 ,0.01543808 ,0.015449524 ,0.016426086 ,0.016559601 ,0.017202377 ,0.01517868 ,0.015163422 ,0.01559639 ,0.0154953 ,0.016525269 ,0.01644516 ,0.017097473 ,0.015224457 ,0.015274048 ,0.015493393 ,0.015363693 ,0.016239166 ,0.016422272 ,0.01717186 ,0.015254974 ,0.015260696 ,0.01550293 ,0.015338898 ,0.016368866 ,0.016654968 ,0.016815186 ,0.015352249 ,0.015363693 ,0.015625 ,0.015439987 ,0.016429901 ,0.016689301 ,0.016799927 ,0.015281677 ,0.01524353 ,0.015563965 ,0.01543808 ,0.016748428 ,0.016613007 ,0.01666832 ,0.015283585 ,0.015237808 ,0.015420914 ,0.015384674 ,0.016765594 ,0.016504288 ,0.016588211 ,0.015295029 ,0.015317917 ,0.015464783 ,0.015388489 ,0.016515732 ,0.016658783 ,0.016500473 ,0.015155792 ,0.015220642 ,0.015443802 ,0.015380859 ,0.016775131 ,0.016685486 ,0.016330719 ,0.015201569 ,0.015151978 ,0.01537323 ,0.015357971 ,0.016784668 ,0.016614914 ,0.016433716 ,0.0151577 ,0.015172958 ,0.015390396 ,0.01525116 ,0.016777039 ,0.016439438 ,0.016326904 ,0.015256882 ,0.015275955 ,0.015602112 ,0.015342712 ,0.016613007 ,0.016384125 ,0.01640892 ,0.01512146 ,0.015266418 ,0.015476227 ,0.015396118 ,0.016672134 ,0.01650238 ,0.016462326 ,0.015346527 ,0.015407562 ,0.015504837 ,0.015510559 ,0.017276764 ,0.016857147 ,0.017986298 ,0.015148163 ,0.015111923 ,0.01590538 ,0.015207291 ,0.017314911 ,0.017688751 ,0.024848938]
sensitivity_13b = np.array(sensitivity_13b)

q3 = 0.016615868
iqr = 0.001188278

outlier = q3 + 3 * iqr
print(outlier)
print(sensitivity_13b[np.where(sensitivity_13b > outlier)])
exit()

ppl = np.array(ppl_w_outlier)
# ppl_w_outlier = np.array(ppl_w_outlier).reshape(n_layer, n_block).T
# print(ppl_w_outlier)


q1 = np.percentile(ppl, 25)
q3 = np.percentile(ppl, 75)
iqr = q3 - q1
outlier = q3 + 1.5 * iqr
print(outlier)
print(ppl[np.where(ppl > outlier)])

median = np.median(ppl)
mad = get_median_absolute_deviation(ppl)
outlier = median + 3 * mad
print(outlier)
print(ppl[np.where(ppl > outlier)])

# mean = np.mean(ppl)
# std = np.std(ppl)

# ppl_norm = (ppl - mean) / std

# mean = np.mean(ppl_norm)
# std = np.std(ppl_norm)

# outlier = mean + 3 * std
# print(np.where(ppl_norm > outlier))